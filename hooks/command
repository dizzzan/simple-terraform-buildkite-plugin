#!/usr/bin/env bash
set -eu -o pipefail

DEFAULT_INIT_ARGS="-input=false"
DEFAULT_VALIDATE_ARGS=""
DEFAULT_PLAN_ARGS="-input=false -out=tfplan.out"
DEFAULT_APPLY_ARGS="-input=false -auto-approve tfplan.out"
DEFAULT_DESTROY_ARGS="-input=false -auto-approve"

PLUGIN_DEBUG="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_DEBUG:-false}"
MOUNTDIR="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_MOUNTDIR:-.}"
WORKDIR="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_WORKDIR:-}"
GROUP="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_GROUP:-}"
TF_VALIDATE="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_VALIDATE:-true}"
TF_INIT="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_INIT:-true}"
TF_PLAN="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_PLAN:-true}"
TF_APPLY="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_APPLY:-false}"
TF_DESTROY="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_DESTROY:-false}"
BLOCK="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_BLOCK:-false}"
WAIT="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_WAIT:-true}"
TF_INIT_ARGS="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_INIT_ARGS:-${DEFAULT_INIT_ARGS}}"
TF_VALIDATE_ARGS="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_VALIDATE_ARGS:-${DEFAULT_VALIDATE_ARGS}}"
TF_PLAN_ARGS="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_PLAN_ARGS:-${DEFAULT_PLAN_ARGS}}"
TF_APPLY_ARGS="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_APPLY_ARGS:-${DEFAULT_APPLY_ARGS}}"
TF_DESTROY_ARGS="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_DESTROY_ARGS:-${DEFAULT_DESTROY_ARGS}}"
PROPAGATE_AWS_AUTH_TOKENS="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_PROPAGATE_AWS_CREDENTIALS:-true}"
PROPAGATE_ENVIRONMENT="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_PROPAGATE_ENVIRONMENT:-true}"
SUPPRESS_STEPS="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_SUPPRESS_STEPS:-false}"

TF_VERSION="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_TERRAFORM_VERSION:-latest}"
DOCKER_VERSION="${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_DOCKER_VERSION:-latest}"
DOCKER_PLUGIN_VERSION=$([ "$DOCKER_VERSION" = "latest" ] && echo "" || echo "#v${DOCKER_VERSION}")
TOP_INDENT=$([ "$SUPPRESS_STEPS" ] && echo "  " || echo "")

INDENT=$([ "$GROUP" ] && echo "${TOP_INDENT}    " || echo "${TOP_INDENT}")

WAIT_STEP=$'\n'$([ "$WAIT" = "true" ] && echo $'\n'"${INDENT}- wait" || echo "")$'\n\n'
BLOCK_STEP=$'\n'$([ -n "$BLOCK" ] && echo $'\n'"${INDENT}- block: \"${BLOCK}\""$'\n' || echo "")$'\n\n'
OUT="$([ "$SUPPRESS_STEPS" ] && echo "" || echo "steps:"$'\n'])"

UID="$(id -u)"

get_docker_block() {
cat << EOF
${INDENT}  command: "$1"
${INDENT}  plugins:
${INDENT}  - docker${DOCKER_PLUGIN_VERSION}:
${INDENT}      image: "hashicorp/terraform:${TF_VERSION}"
${INDENT}      volumes: 
${INDENT}        - ${MOUNTDIR}:/work
${INDENT}      mount-checkout: false
${INDENT}      workdir: /work/${WORKDIR}
${INDENT}      shell: false
${INDENT}      propagate-environment: ${PROPAGATE_ENVIRONMENT}
${INDENT}      propagate-aws-auth-tokens: ${PROPAGATE_AWS_AUTH_TOKENS}
${INDENT}      user: "${UID}"
EOF
if [[ -n "${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_QUEUE:-}" ]]; then
  echo "${INDENT}      agents:"
  echo "${INDENT}        queue: ${BUILDKITE_PLUGIN_SIMPLE_TERRAFORM_QUEUE}"
fi
}

if [ "$GROUP" ]; then
  OUT+='  - group: "'${GROUP}$'"\n'
  if [ "$SUPPRESS_STEPS" ]; then
    OUT+=$'    steps:\n'
  fi
fi

if [ "$TF_INIT" = "true" ]; then
  OUT+="${INDENT}- label: Terraform init"
  OUT+=$'\n'
  OUT+=$(get_docker_block "init ${TF_INIT_ARGS}")
fi

OUT+=$WAIT_STEP

if [ "$TF_VALIDATE" = "true" ]; then
  OUT+="${INDENT}- label: Terraform validate"
  OUT+=$'\n'
  OUT+=$(get_docker_block "validate ${TF_VALIDATE_ARGS}")
fi

OUT+=$WAIT_STEP

if [ "$TF_PLAN" = "true" ]; then
  OUT+="${INDENT}- label: Terraform plan"
  OUT+=$'\n'
  OUT+=$(get_docker_block "plan ${TF_PLAN_ARGS}")
fi

if [ "$TF_APPLY" = "true" ]; then

  if [ -n "$BLOCK" ]; then
    OUT+=$BLOCK_STEP
  else 
    OUT+=$WAIT_STEP
  fi

  OUT+="${INDENT}- label: Terraform apply"
  OUT+=$'\n'
  OUT+=$(get_docker_block "apply ${TF_APPLY_ARGS}")
fi

echo "$OUT" 

if [ "$PLUGIN_DEBUG" != "true" ]; then
  echo "Uploading pipeline..."
  echo "$OUT" | buildkite-agent pipeline upload
fi
